{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","className","s","form","label","input","type","onChange","button","Component","Filter","onChangeFilter","ContactList","contacts","id","onDeleteContact","list","map","listItem","onClick","App","filter","addContact","contact","uuidv4","find","item","alert","prev","deleteContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.223691fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2dWP1\",\"label\":\"ContactForm_label__2cC65\",\"input\":\"ContactForm_input__-ASrI\",\"button\":\"ContactForm_button__dxEhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2JRFn\",\"listItem\":\"ContactList_listItem__p_fDu\",\"button\":\"ContactList_button__egqg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__oU_y7\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value = '', onChangeFilter }) {\n  return (\n    <div>\n      <h3>Find contact by name</h3>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({\n  contacts = [{ name: 'John', number: '555 - 452 - 521', id: 'dfv5' }],\n  onDeleteContact,\n}) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <li key={id} className={s.listItem}>\n            <span>{name}</span>: <span>{number}</span>\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState(() => {\n        return {\n          contacts: parsedContacts,\n        };\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (name === '' || number === '') {\n      alert(\"Name or number can't be empty string\");\n      return;\n    }\n\n    if (this.state.contacts.find(item => item.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(prev => {\n      return { contacts: [...prev.contacts, contact] };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => {\n      return {\n        contacts: prev.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h1>Contacts</h1>\n        {visibleContacts.length > 0 && (\n          <Filter\n            value={this.state.filter}\n            onChangeFilter={this.changeFilter}\n          />\n        )}\n        {visibleContacts.length > 0 ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>Contact list empty for now</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}